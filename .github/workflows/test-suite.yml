---
name: Test Suite

on:
  push:
    branches:
      - "**"
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "0 0 * * *"

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    services:
      mysql:
          image: mysql:5.7
          env:
            MYSQL_USER: username
            MYSQL_PASSWORD: password
            MYSQL_ROOT_PASSWORD: password
            MYSQL_DATABASE: testsuite
          ports:
            - 3306:3306
          options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      postgres:
        image: postgres:13.2
        env:
          POSTGRES_USER: username
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testsuite
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: "actions/checkout@v3"
      - uses: "actions/setup-python@v4"
        with:
          python-version: "${{ matrix.python-version }}"
      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-test-v02
      - name: "Install dependencies"
        if: steps.cache.outputs.cache-hit != 'true'
        run: "scripts/install"
      - name: "Run tests"
        run: "scripts/test"
      - name: "Build package & docs"
        run: "scripts/build"
      - name: "Run tests with PostgreSQL"
        env:
          TEST_DATABASE_URL: "postgresql://username:password@localhost:5432/testsuite"
        run: "scripts/test"
      - name: "Run tests with MySQL"
        env:
          TEST_DATABASE_URL: "mysql://username:password@localhost:3306/testsuite"
        run: "scripts/test"
      - name: "Run tests with SQLite"
        env:
          TEST_DATABASE_URL: "sqlite:///testsuite"
        run: "scripts/test"
